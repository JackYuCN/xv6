1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

func(arg1, arg2, arg3) --> arg1:a1, arg2:a2, arg3:a3.
a3 holds 13

2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)

g is in 0x0, f is in 0xe; but in main, the call to f(correspondingly, g) is optimized into const value 12.

3. At what address is the function printf located?

0x628

4. What value is in the register ra just after the jalr to printf in main?

after executing "auipc ra,0x0", ra is set to be equal to pc, aka 0x30
after executing "jalr	1528(ra)", pc jump to 0x30 + 1528 = 1576(0x628) and ra is set to be ra + 8, aka 0x38

5. Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.

the output is "HE110 World"

I would set i to be 0x726c6400, while 57616 remains the same

6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

  printf("x=%d y=%d", 3);

5301, because we don't pass in the second argument(aka a2), so printf use the past a2 as the second argument, which is 5301

